- Perl: use feature qw(signatures); no warnings qw(experimental::signatures);
  or Function::Parameters, Method::Signatures

- rework variables available for templates: standardize names, pick decent
  names, DRY up them up, generate them in one place, document them

- move move vars variables into the comics, for better scoping and to allow
  multiple generators to contribute

- twitter with @someone does not get tweeted for some reason

- backlog: list comics under series headings (hideable?)

- don't post to reddit / don't tweet a link, if the link is dead (slow
  web server?), or have uploading code try to make sure the upload worked
  (link check)

- define comic order by refering the previous or next comic, instead of
  having a date, so that inserting one for current events doesn't ripple
  through the backlog (and still maintaining a regular / weekly schedule)

- break up code into different (pluggable?) modules, e.g., reddit poster,
  inkscape importer

- internal archive with published dates and (source svg) file names and
  comic counts (maybe a matter of the template only)

- allow adding (invisible) watermarks

- transcript needs to check all frames for ordering, not just rows; that
  should get rid of space padding in texts

- email current comic when publishing

- handle more frame varieties, e.g., long frame over 2 rows on the side

- add "previously published in ..." link to the bottom of the page

- comics by series pages / links (can a comic be in more than one series?
  (why not?))

- prev next first last buttons per series

- tags under each comics, as hyperlinks to the tag cloud

- tag cloud (see https://www.w3.org/TR/html5/common-idioms.html#tag-clouds)
  or comics by tag pages

- export svg instead of png (for a truly fluent / responsive web design),
  but would also need to offer the font for download, I guess? or chop the
  svgs or pngs up per frame (ugly, relies on either table-based HTML layout,
  CSS magic beyond my skills, or chopping comics by rows only)

- minimize svg file sizes (e.g., with svgo), if svg export is supported

- generate latex code for pdf, or generarte pdf right away

- liner notes with comments in pdf, suck in other interesting documentation.
  This can pull stats per comics from git: how long between creation and
  publication, how long was the backlog each Fri, how big was the ideas file
  each week, how often was the comic changed (after being published).

- sizemap should have colors depending on where the comic was published

- make sizemap svg attributes configurable

- add a thumbnail / preview for really large images (posters), especially in
  RSS

- cleanup hard-coded names, e.g., "Rahmen" or even "Meta", "generated"

- check for date holes (why? are those bad? only in the future? but I could
  schedule a xmas or Fri 13 comic ahead of time and then have holes and
  that's ok); warn in backlog if no comic for next Friday

- more social media: Mastodon, Openbook, Ello, Diaspora, inrupt.com
  (via Zapier?)

- use a configuration file to avoid passing lots of parameters

- use inkscape shell to export in bulk (could be faster than creating
  multiple inkscape processes), would be great to avoid writing temp svg
  files if inkscape accepts the svg on stdin

- publish on CPAN, add badge to README.md like this for Minilla:
  [![MetaCPAN Release](https://badge.fury.io/pl/Minilla.svg)](https://metacpan.org/release/Minilla)
  https://badge.fury.io/for/pl

- check: published date must be >= created date (typo?)

- profile and fix slooooow handling of some (large?) svg files; debug
  hiccups when it seems to stall for minutes (when cache is stale, but looks
  like frame collection could be the problem, not actually calling inkscape)

- check that speaker names all show up in the "who" meta data (but be
  careful about additional text, like "Paul, opening a beer:")

- write qr code file only when writing the pngs, i.e., when the source has
  changed (only need this if the generated title / qr code file name has
  changed, but this is harder to detect)

- speed up with multiple threads for checking and converting svg files (1
  thread per comic, then wait till all are done; reuse threads for writing
  per-comic pages, when all next/prev links are known)

- cache more data, like png sizes, transcript, and frame positions?

- mark cache as dirty if comic fails a check, so that you don't have to
  manually touch the svg: cache files should get written only after all
  checks have passed, and then a re-run doesn't try to use bad / incomplete
  cache files

- verbose and debug flags to print what's going on (helpful for configurable
  checks and actions)

- switch Twitter module to Twitter::API

- check 2FA for Reddit and Twitter

- optimization: when modifying only the latest comic (or an unpublished
  comic), don't recreate all html pages (only if the latest comic file name
  (title) changes, links need to get updated). This should speed up final
  touches on the comic.

- defect: don't remove spaces in tags

- defect: frame detection for text outside of a single frame (comic title)
  does not seem to treat that text as after anything within the frame. The
  whole frame handling code needs a close look.

- defect: frame detection lumps text under the last row of frames in that
  last row, breaking captions under comics

- feature: should frame detection at the top of the comic use frames of the
  next (first) row? that would allow having a title above the frame, like
  "yesterday" and "today".

- defect: does it treat text outside of a meta layer as speaker label just
  because it ends in a colon (motivation.svg)? it probably should not.

- check if meta text is not in a meta layer? by checking for colons? but
  trailig colons should be ok.

- transcript check needs to not just grab all texts in order but also
  respect layers: don't treat regular text as speaker indicator just because
  it ends in a colon (could be a before / after style comic).

- make handling of paths uniform, relative paths need to be resolved
  relative to a given base directory (e.g., the "see": "..." reference to
  another comic).

- feature: upload to e.g., imgur.com and then post a link to that on reddit.
  This may be interesting for people not running their own website, and for
  subreddits that only accept file hosting on certain sites (like imgur).

- feature: a rss / atom feed module that doesn't require the user to provide
  a template and hence know the feed format.

- feature: allow comics to opt out of the feed. (use case?)

- feature: post "classics" to social media if there is no new comic

- should the names in the JSON configuration file be case-insensitive? Could
  be confusing when case actually matters, e.g., for Perl modules.
  If case matters, make sure it's used consistently.

- feature: complain about unknown settings to catch typos

- clean out backlog: when a comic goes from backlog to published, remove its
  html file from the backlog

- feature: check text positions as double, so that you can move texts
  minimally to control the transcript without visual impact

- performance: does it make a difference to remove unneeded top level layers
  (other languages, turned invisible in Inkscape) instead of switching them
  to hidden? Files would be smaller (is disk space an issue anyway?), but
  would converting them be faster?

- feature: make tags configurable instead of using hard-coded "who",
  "series", and "tags"; for backlog as well as various comics-by-x overviews

- replace vars{'tags'} and vars{'tagsOrder'} in backlog with an ordered hash
  if Template supports this nicely

- backlog currently appends language name to tags and series, it could
  instead return hashes with languages as keys. On the one hand the template
  gets more complicated (one more nested loop), on the other hand it's
  cleaner and would allow to show / hide tags or series per language

- break up Comic::Out::Backlog into the actual backlog part and meta data
  (e.g., tags) aggregation overview

- support aggregating meta data that's not per-language in the backlog

- sitemap should work without people having to define a template

- if we keep the sitemap via template, filter the list passed to each
  template instead of passing the filter notFor function for easier use

- default subreddits should be per language hash, both in config and in
  comic meta data

- feature: make configurable prefix / suffix for Reddit titles

- fix: save png image size per language; it can vary by language, e.g., when
  one language has 2 lines of text under the comic and the other three

- feature: Comic::Social::Twitter needs a svg mode

- performance: write everything needed to publish to a cache file so that
  publishing code doesnÂ´t need to scan all comics again (may be tricky with
  generating pages for archive, tags, etc)

- feature: see meta data should try to resolve path relative to current
  comic

- feature: allow copying static files and pipe them through a Template to
  modify bits in mostly static files, like a copyright year in an index.html

- defect: copyright placement is way off if frames x is not around -206?

- feature: generators should accept a single template for all languages in
  addition to a hash of languages to templates

- feature: deduct output path from fragments, like outdir / base dir plus
  language placeholders, for less repetitive configuration files

- feature: spell check: only report each misspelled word only once per
  language per comic, to also avoid reporting typos twice when there
  is a per language container layer and the layer collecting code pick both
  actual language and container layer, but the container layer contains the
  actual language layer
